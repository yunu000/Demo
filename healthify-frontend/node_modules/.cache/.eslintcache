[{"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\UserContext.js":"3","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\PatientHome.js":"4","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Login.js":"5","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\About.js":"6","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Navbar.js":"7","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Home.js":"8","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\RegistrationForm.js":"9","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\ProgressBar.js":"10","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\services\\ApiService.js":"11","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\PatientRegistration.js":"12","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\ActivityAf.js":"13","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Rewards.js":"14","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Checkbox.js":"15"},{"size":228,"mtime":1697626330718,"results":"16","hashOfConfig":"17"},{"size":1285,"mtime":1697720588000,"results":"18","hashOfConfig":"17"},{"size":87,"mtime":1697719801195,"results":"19","hashOfConfig":"17"},{"size":4369,"mtime":1697740528837,"results":"20","hashOfConfig":"17"},{"size":3767,"mtime":1697726892974,"results":"21","hashOfConfig":"17"},{"size":5412,"mtime":1697719801176,"results":"22","hashOfConfig":"17"},{"size":3407,"mtime":1697726827696,"results":"23","hashOfConfig":"17"},{"size":1305,"mtime":1697719801184,"results":"24","hashOfConfig":"17"},{"size":1759,"mtime":1697719801191,"results":"25","hashOfConfig":"17"},{"size":414,"mtime":1697719801191,"results":"26","hashOfConfig":"17"},{"size":2033,"mtime":1697728885159,"results":"27","hashOfConfig":"17"},{"size":9488,"mtime":1697719801190,"results":"28","hashOfConfig":"17"},{"size":704,"mtime":1697740459182,"results":"29","hashOfConfig":"17"},{"size":1014,"mtime":1697739401252,"results":"30","hashOfConfig":"17"},{"size":330,"mtime":1697719801184,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1p8zwv9",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\index.js",[],["69","70"],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\App.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\UserContext.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\PatientHome.js",["71","72","73","74","75","76","77"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport \"./dashboard.css\";\r\nimport ActivityAf from \"./ActivityAf\";\r\nimport ProgressBar from \"./ProgressBar\";\r\nimport Rewards from \"./Rewards\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ApiService from '../services/ApiService' \r\nimport image from './dashboard1.jpg'\r\n\r\nconst PatientHome = () => {\r\n  const { user,setUser} = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [message, setMessage] = useState(\r\n    \"Starting for the day, complete your daily routine to earn healthy life and rewards!!\"\r\n  );\r\n  const [percentage, setPercentage] = useState(0);\r\n  const [disable,setDisable] = useState({\r\n    morning : false,\r\n    afternoon : false,\r\n    evening : false,\r\n  })\r\n  const [points, setPoint] = useState(0);\r\n\r\n  const clickHandler = (e) => {\r\n    history.push(\"/rewards\");\r\n  };\r\n  const updateReward = (reward) =>{\r\n    console.log(reward+user.rewardPoint)\r\n    ApiService.updateReward({\r\n        uid:user.uid,\r\n        reward:reward+user.rewardPoint\r\n    }).then(resp => {\r\n        let user = resp.data;\r\n        console.log(user)\r\n        setUser(user);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }).catch(() => {\r\n        setUser(null);\r\n    })\r\n  }\r\n  useEffect(()=>{\r\n        if(percentage==100)\r\n            updateReward(100)\r\n        else if(disable.evening)\r\n            updateReward(-50)\r\n    },[percentage])\r\n\r\n  const updateStatus = (time) => {\r\n    if(time==\"Morning\")\r\n    {\r\n        setPercentage(percentage + 33);\r\n        setMessage(\"Yay!! Two more steps to earn reward\");\r\n        setDisable({\r\n            ...disable,\r\n            morning:true,\r\n        })\r\n    }\r\n    else if(time==\"Afternoon\")\r\n    {\r\n        setPercentage(percentage + 33);\r\n        setMessage(\"Great!! One more step left to earn reward\");\r\n        setDisable({\r\n            ...disable,\r\n            afternoon:true,\r\n            morning:true,\r\n        })\r\n    }\r\n    else\r\n    {\r\n        setPercentage(percentage + 34);\r\n        setMessage(\"Reward earned!! Thank you for interacting with me 3 times, please come tomorrow\");\r\n        setDisable({\r\n            ...disable,\r\n            evening:true,\r\n            afternoon:true,\r\n            morning:true,\r\n        })\r\n        \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage:`url(${image})`,\r\n        backgroundRepeat:\"no-repeat\",\r\n        backgroundSize:\"cover\",\r\n        padding: \"0 px\",\r\n        overflow:\"hidden\"\r\n      }}\r\n    >\r\n      <div className=\"container d-flex flex-column align-items-center justify-content-center dashboard text-center bg-image1\">\r\n        <h3\r\n          style={{\r\n            color: \"#FFFFFF\",\r\n            marginTop: \"100px\",\r\n          }}\r\n        >\r\n          {message}\r\n        </h3>\r\n        <div className=\"row\" style={{ width: \"90%\" }}>\r\n          <div\r\n            className=\"col-8 d-flex flex-column align-items-center justify-content-center\"\r\n            style={{ padding: \"30px\" }}\r\n          >\r\n            <ActivityAf\r\n              title=\"Morning\"\r\n              updateStatus={updateStatus}\r\n              subtitle=\"It's time for Morning Medication!\"\r\n              disable = {disable.morning}\r\n            />\r\n            <ActivityAf\r\n              title=\"Afternoon\"\r\n              updateStatus={updateStatus}\r\n              subtitle=\"It's time for Afternoon Medication!\"\r\n              disable = {disable.afternoon}\r\n            />\r\n            <ActivityAf\r\n              title=\"Evening\"\r\n              updateStatus={updateStatus}\r\n              subtitle=\"It's time for Evening Medication!\"\r\n              disable = {disable.evening}\r\n            />\r\n          </div>\r\n          <div\r\n            className=\"col-4  d-flex flex-column align-items-center justify-content-center\"\r\n            style={{}}\r\n          >\r\n            <ProgressBar percentage={percentage} />\r\n            <button\r\n          type=\"button\"\r\n          style={{ width: \"400px\",marginTop:\"20px\",color:\"yellow\" }}\r\n          className={`btn btn-lg btn-dark shadow-none rounded-pills`}\r\n          onClick={clickHandler}\r\n          value=\"history\"\r\n        >\r\n          My Rewards\r\n        </button>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientHome;\r\n","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Login.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\About.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Navbar.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Home.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\RegistrationForm.js",["78","79"],"import { useState } from 'react';\r\nimport './registration.css'\r\nimport { Link } from 'react-router-dom';\r\nimport PatientRegistration from './PatientRegistration';\r\n\r\nconst RegistrationForm = () => {\r\n    const [activeButton, setActiveButton] = useState('patient');\r\n    const clickHandler = (e) => {\r\n        setActiveButton(e.target.value);\r\n    }\r\n    return (\r\n        <div className=\"container-fluid ps-md-0\" style= {{marginTop: \"56px\"}}>    \r\n            <div className=\"row g-0\">\r\n                <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image-reg\"></div>\r\n                <div className=\"col-md-8 col-lg-6\">\r\n                    <div className=\"login d-flex align-items-center py-0\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-9 col-lg-8 mx-auto\">\r\n                                    <div className=\"text-center my-container-reg\">\r\n                                        <h1 className=\"display-6 mb-3\">Register Now!</h1>                                       \r\n                                        <div className=\"signup-form\">\r\n                                            {<PatientRegistration/>}\r\n                                            <div className=\"hint-text\">Already have an account? <Link to=\"/login\" style={{textDecoration: \"none\"}}><span>Login here</span></Link></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm\r\n","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\ProgressBar.js",["80"],"// import {\r\n// \tProgress, \r\n// \tButtonGroup, \r\n// \tButton \r\n// } from \"rsuite\"; \r\nimport { useState } from \"react\"; \r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n \r\n\r\nexport default function ProgressBar(props) { \r\n    const {percentage} = props;\r\n\treturn ( \r\n<CircularProgressbar value={percentage} text={`${percentage}%`} />\r\n\t); \r\n}","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\services\\ApiService.js",[],"C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\PatientRegistration.js",["81","82","83","84"],"import { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useRef } from 'react';\r\nimport ApiService from '../services/ApiService';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PatientRegistration = () => {\r\n\r\n    const history = useHistory();\r\n    const { register, handleSubmit, formState: { errors }, watch } = useForm({ mode: \"onChange\" });\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const submitHandler = (data) => {\r\n        console.log(JSON.stringify(data));\r\n        ApiService.patientRegistration(data)\r\n            .then(resp=>{\r\n                console.log(resp.data);\r\n                history.push({\r\n                    pathname: '/login',\r\n                    state: { message: resp.data }\r\n                });\r\n            }).catch(err => {\r\n                console.log(err);\r\n            })\r\n    }  \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(submitHandler)} method=\"post\" className=\"needs-validation\" noValidate autoComplete=\"off\">\r\n            <p>Please fill in this form to create an account!</p>\r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.name})} name=\"name1\" placeholder=\"First Name\" \r\n                        {...register('name1', { \r\n                            required: \"Please enter your First Name.\",\r\n                            pattern: {\r\n                                value: /^(?![\\. ])[a-zA-Z\\. ]+(?<! )$/,\r\n                                message: \"Invalid name.\"\r\n                            }\r\n                        })}/> \r\n                        {errors.name1 && <div className=\"invalid-tooltip\">{errors.name1.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.name})} name=\"name\" placeholder=\"Last Name\" \r\n                        {...register('name', { \r\n                            required: \"Please enter your Last name.\",\r\n                            minLength: {\r\n                                value: 4,\r\n                                message: \"Should be at least 4 characters\"\r\n                            },\r\n                            pattern: {\r\n                                value: /^(?![\\. ])[a-zA-Z\\. ]+(?<! )$/,\r\n                                message: \"Invalid name.\"\r\n                            }\r\n                        })}\r\n                        />\r\n                        {errors.name && <div className=\"invalid-tooltip\">{errors.name.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"email\" className={classNames(\"form-control\",{\"is-invalid\": errors.email})}  name=\"email\" placeholder=\"Email\"\r\n                        {...register('email', { \r\n                                required: \"Please enter your email.\",\r\n                                pattern: {\r\n                                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                                    message: \"Invalid email.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.email && <div className=\"invalid-tooltip\">{errors.email.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.password})} name=\"password\" placeholder=\"Password\" \r\n                            {...register('password', { \r\n                                    required: \"Please enter your password.\",\r\n                                    minLength: {\r\n                                        value: 8,\r\n                                        message: \"Should be at least 8 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.password && <div className=\"invalid-tooltip\">{errors.password.message}</div>}\r\n                    </div>\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"password\" className={classNames(\"form-control\",{\"is-invalid\": errors.confirm_password})} name=\"confirm_password\" placeholder=\"Confirm Password\" \r\n                            {...register('confirm_password', {\r\n                                validate: value =>\r\n                                    value === password.current || \"The passwords do not match.\"\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.confirm_password && <div className=\"invalid-tooltip\">{errors.confirm_password.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"col position-relative\">\r\n                    <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.mobile})} name=\"mobile\" placeholder=\"Mobile\" \r\n                        {...register('mobile', { \r\n                                required: \"Please enter your mobile.\",\r\n                                pattern: {\r\n                                    value: /^[789]\\d{9}$/,\r\n                                    message: \"Invalid mobile number.\"\r\n                                }\r\n                            }\r\n                        )}\r\n                    />\r\n                    {errors.mobile && <div className=\"invalid-tooltip\">{errors.mobile.message}</div>}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <div className=\"row\">\r\n                    <div className=\"col position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.address})} name=\"address\" placeholder=\"Address\" \r\n                            {...register('address', { \r\n                                    required: \"Please enter your address.\",\r\n                                    minLength: {\r\n                                        value: 10,\r\n                                        message: \"Should be at least 10 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.address && <div className=\"invalid-tooltip\">{errors.address.message}</div>}\r\n                    </div>\r\n                    <div className=\"col-4 position-relative\">\r\n                        <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.city})}  name=\"city\" placeholder=\"City\" \r\n                            {...register('city', { \r\n                                    required: \"Please enter your city.\",\r\n                                    minLength: {\r\n                                        value: 5,\r\n                                        message: \"Should be at least 5 characters.\"\r\n                                    }\r\n                                }\r\n                            )}\r\n                        />\r\n                        {errors.city && <div className=\"invalid-tooltip\">{errors.city.message}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group position-relative\">\r\n                <input type=\"text\" className={classNames(\"form-control\",{\"is-invalid\": errors.dob})} name=\"dob\" placeholder=\"Date of birth in yyyy-MM-dd\" \r\n                    {...register('dob', { \r\n                            required: \"Please enter your date of birth.\",\r\n                            pattern: {\r\n                                value: /^\\d{4}-\\d{2}-\\d{2}$/,\r\n                                message: \"Invalid date of birth.\"\r\n                            }\r\n                        }\r\n                    )}\r\n                />\r\n                {errors.dob && <div className=\"invalid-tooltip\">{errors.dob.message}</div>}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-check-label\">\r\n                    <input type=\"checkbox\" className={classNames(\"form-check-input\", {\"is-invalid\": errors.tnc})} name=\"tnc\"\r\n                        {...register('tnc', { \r\n                                required: \"Please agree to the terms and conditions.\"\r\n                            }\r\n                        )} \r\n                    /> I hereby declare that the above information is true to the best of my knowledge.\r\n                </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <button type=\"submit\" className=\"btn btn-primary btn-lg text-dark\">Sign Up</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PatientRegistration\r\n","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\ActivityAf.js",["85"],"import React from \"react\";\r\nimport Checkbox from \"./Checkbox\";\r\n\r\nfunction ActivityAf(props) {\r\n  const { title,subtitle,updateStatus,disable} = props;\r\n  return (\r\n    <div className=\"card text-center\" style={{ width: \"60%\", margin: \"10px\" ,borderRadius:\"60px\"}}>\r\n      <div className=\"card-header\" style={{color:\"black\"}}>\r\n        {subtitle}\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\" style={{marginBottom:\"15px\"}}>{title}</h5>\r\n        <button onClick={()=>{updateStatus(title)}} className=\"ButtonStyle btn btn-outline-success\" disabled={disable}>\r\n          Wohhhoooo!!!\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ActivityAf;\r\n","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Rewards.js",["86"],"import React from \"react\";\r\nimport Checkbox from \"./Checkbox\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport { useContext } from \"react\";\r\nimport image from \"./rewards.avif\";\r\nimport coin from \"./coin.png\";\r\nfunction Rewards() {\r\n  const { user } = useContext(UserContext);\r\n  return (\r\n\r\n    <div className=\"text-center d-flex flex-column align-items-center justify-content-center\" style={{ color:\"white\",width: \"100%\",height:\"100vh\",backgroundImage:`url(${image})`,backgroundRepeat:\"no-repeat\",backgroundSize:\"cover\"}}>\r\n      <div style={{padding:\"auto\"}}>\r\n        <h1 style={{fontWeight:\"900\"}}>Your reward points are waiting for you!!</h1>\r\n        <img src={coin} alt=\"\" />\r\n        <h2 className=\"card-title\">Points Earned</h2>\r\n        <h2 className=\"points\">{user.rewardPoint}</h2>\r\n        <br/>\r\n        <p>Claim your free doctor consultation in just 500 points.</p>\r\n        <p>Redeem your points against medication purchase.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rewards;\r\n","C:\\Users\\Acer\\Desktop\\hack\\healthify\\healthify-frontend\\src\\components\\Checkbox.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":6,"column":8,"nodeType":"93","messageId":"94","endLine":6,"endColumn":15},{"ruleId":"91","severity":1,"message":"95","line":23,"column":10,"nodeType":"93","messageId":"94","endLine":23,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":23,"column":18,"nodeType":"93","messageId":"94","endLine":23,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":43,"column":22,"nodeType":"99","messageId":"100","endLine":43,"endColumn":24},{"ruleId":"101","severity":1,"message":"102","line":47,"column":7,"nodeType":"103","endLine":47,"endColumn":19,"suggestions":"104"},{"ruleId":"97","severity":1,"message":"98","line":50,"column":12,"nodeType":"99","messageId":"100","endLine":50,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":59,"column":17,"nodeType":"99","messageId":"100","endLine":59,"endColumn":19},{"ruleId":"91","severity":1,"message":"105","line":7,"column":12,"nodeType":"93","messageId":"94","endLine":7,"endColumn":24},{"ruleId":"91","severity":1,"message":"106","line":8,"column":11,"nodeType":"93","messageId":"94","endLine":8,"endColumn":23},{"ruleId":"91","severity":1,"message":"107","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":18},{"ruleId":"108","severity":1,"message":"109","line":39,"column":46,"nodeType":"110","messageId":"111","endLine":39,"endColumn":47,"suggestions":"112"},{"ruleId":"108","severity":1,"message":"109","line":39,"column":58,"nodeType":"110","messageId":"111","endLine":39,"endColumn":59,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"109","line":54,"column":46,"nodeType":"110","messageId":"111","endLine":54,"endColumn":47,"suggestions":"114"},{"ruleId":"108","severity":1,"message":"109","line":54,"column":58,"nodeType":"110","messageId":"111","endLine":54,"endColumn":59,"suggestions":"115"},{"ruleId":"91","severity":1,"message":"116","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"116","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'Rewards' is defined but never used.","Identifier","unusedVar","'points' is assigned a value but never used.","'setPoint' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'disable.evening' and 'updateReward'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'activeButton' is assigned a value but never used.","'clickHandler' is assigned a value but never used.","'useState' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["120","121"],["122","123"],["124","125"],["126","127"],"'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"133","fix":"134","desc":"135"},{"messageId":"130","fix":"136","desc":"132"},{"messageId":"133","fix":"137","desc":"135"},{"messageId":"130","fix":"138","desc":"132"},{"messageId":"133","fix":"139","desc":"135"},{"messageId":"130","fix":"140","desc":"132"},{"messageId":"133","fix":"141","desc":"135"},"Update the dependencies array to be: [disable.evening, percentage, updateReward]",{"range":"142","text":"143"},"removeEscape",{"range":"144","text":"145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"146","text":"147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"148","text":"145"},{"range":"149","text":"147"},{"range":"150","text":"145"},{"range":"151","text":"147"},{"range":"152","text":"145"},{"range":"153","text":"147"},[1479,1491],"[disable.evening, percentage, updateReward]",[1636,1637],"",[1636,1636],"\\",[1648,1649],[1648,1648],[2525,2526],[2525,2525],[2537,2538],[2537,2537]]